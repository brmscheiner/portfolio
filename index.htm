<html>
  <head>
    <meta charset="utf-8">
    <link href='https://fonts.googleapis.com/css?family=Playfair+Display:400,700' rel='stylesheet' type='text/css'>
    <!-- <link href='https://fonts.googleapis.com/css?family=Playfair+Display:400,700,400italic' rel='stylesheet' type='text/css'> -->
    <link href='https://fonts.googleapis.com/css?family=Roboto+Slab:100' rel='stylesheet' type='text/css'>
    <link href="index.css" rel="stylesheet" type="text/css" />
    <script src="anagram.js"></script>
    <title></title>
  </head>

  <body>
    <div id="content">
      <div id="intro">
        <h1> Ben Scheiner </h1>
        <p> I am a developer with professional experience in
          <a id="DATA" href="#">data modeling</a> and
          <a id="VIZ" href="#">visualization</a>. I spent the beginning of 2016
          at the <a id="RC" href="#">Recurse Center</a>, and worked at the
          <a id="FRB" href="#">Federal Reserve Board</a> from 2013 to 2015.
          At <a id="TRI" href="#">Trinity University</a>, I double majored in
          math and economics. I have experience with
          <a id="PY" href="#">Python</a>,
          <a id="JS" href="#">Javascript</a>,
          <a id="C" href="#">C</a>,
          <a id="D3" href="#">D3</a>,
          <a id="MTLB" href="#">Matlab</a>,
          <a id="BASH" href="#">Bash</a>,
          and <a id="PRO" href="#">Processing</a>, but I love learning new languages too!
        </p>
      </div>
      <img class="divider" src="img/line-divider.png">
      <div id="anagram-big"></div>
      <div id="anagram-small"></div>
      <img class="divider" src="img/line-divider.png">
      <div id="social">
        <a href="https://github.com/brmscheiner"><img src="img/github-icon.png"></a>
      </div>
    </div>
    <script>
      "use strict"

      // need to add a div that includes links to projects
      // that I refer to in the above text.
      // contact information somewhere.
      // ease in div resizing...
      let header_py = ""
      let content_py =
      "Python is definitely my strongest language. Most of the coursework for "+
      "my computer science minor was in Python, I used it all the time at the "+
      "Federal Reserve to write data processing scripts, and it was the "+
      "language I used for my most ambitious projects at the Recurse Center. "+
      "I am comfortable with many of the more advanced features of the "+
      "language, like generators, list comprehensions, and metaclasses."
      let header_d3 = ""
      let content_d3 =
      "By far my biggest D3 project is Ideogram, which uses information about "+
      ""
      let header_js = ""
      let content_js =
      "The transition effect used on this site was written in Javascript. "+
      "Most of my other Javascript experience comes from generating "+
      "visualizations in libraries like D3 and P5."
      let header_c = ""
      let content_c =
      "At the Recurse Center I read Kernighan and Ritchie's book about C and "+
      "implemented Lempel-Ziv-Welch compression. As a long time Linux user, I "+
      "found it fascinating to learn how bash functions like cp and ls are "+
      "implemented."
      let header_mtlb = ""
      let content_mtlb = "At the Federal Reserve, I implemented a model of "+
      "monetary policy contagion in Matlab. In addition, many of the ad hoc "+
      "visualizations I worked on were generated in Matlab, including some "+
      "3D charts."
      let header_frb =
      "Senior Research Assistant, Federal Reserve Board of Governors\n"+
      "Global Financial Markets, July 2013 – June 2015"
      let content_frb =
      "Research Assistants were responsible for updating software that pulls "+
      "data from dozens of sources into a common database, automatically "+
      "calculates related measures (such as rolling correlations and yield "+
      "curves), and visualizes the data in a polished, consistent manner on "+
      "the section website.\n"+
      " • Implemented a model of monetary policy contagion in Matlab.\n"+
      " • Created a database of liquidity measures using trade data from the corporate bond market in SAS.\n"+
      " • Forecasted policy rate paths based on long-term exchange rates in Python.\n"+
      " • Prepared charts for the Teal Book and briefings to the Board of Governors, usually under considerable time pressure.\n"+
      " • Director of FedEd, the Board's education and outreach program for research assistants."
      let header_bash = ""
      let content_bash =
      "At the Recurse Center I built zlp, a command line interface for Zulip. "+
      "Most of the time, I just use bash to get other work done."
      let header_rc =
      "Recurse Center\n"+
      "January - March 2016"
      let content_rc =
      "The Recurse Center is a project-oriented educational retreat for programmers.\n"+
      " • Implemented Lempel-Ziv-Welch compression in C.\n"+
      " • Developed a command line interface for Zulip using their RESTful API in Python.\n"+
      " • Created a conspiracy theory generating twitterbot in Python.\n"+
      " • Wrote a Sudoku generator in Haskell.\n"+
      " • Developed a letter switching transition effect in Javascript.\n"+
      " • Ideogram: generate visual fingerprints of your project's source code.\n"+
      "    - Creates call graphs by statically parsing Python source code into abstract syntax "+
      "trees and matching function calls to the function definitions they reference.\n"+
      "    - Generates force directed graphs, enclosure diagrams, and custom gear "+
      "layouts using D3 templates and pystache."
      let header_pro = ""
      let content_pro =
      "Processing is my go-to environment for bringing whimsical ideas to life "+
      "fast. For example, after spending 2 months at an ant-themed coworking "+
      "space in Barcelona called ATTA, I wrote a script that makes virtual ants "+
      "crawl into the shape of the ATTA logo."
      let header_tri =
      "Trinity University\n"+
      "August 2009 - May 2013"
      let content_tri =
      " • BA, Mathematics and Theoretical Economics. GPA 3.6/4.0.\n"+
      " • Minor in Computer Science."

      let small_anagram = new Anagram()
      small_anagram.initialize({
       container: document.getElementById("anagram-small"),
       states: {
         "small_state_start": "abcdefghijklmnopqrstuvxyz",
         "small_state_PY": content_py,
         "small_state_MTLB": content_mtlb,
         "small_state_C": content_c,
         "small_state_D3": content_d3,
         "small_state_RC": content_rc,
         "small_state_BASH": content_bash,
         "small_state_FRB": content_frb,
         "small_state_PRO": content_pro,
         "small_state_JS": content_js,
         "small_state_TRI": content_tri
       },
       mode: "normal",
       duration: 0.5 // in seconds
      })

      document.getElementById("PY").addEventListener("click", () => small_anagram.animateTo("small_state_PY"))
      document.getElementById("MTLB").addEventListener("click", () => small_anagram.animateTo("small_state_MTLB"))
      document.getElementById("C").addEventListener("click", () => small_anagram.animateTo("small_state_C"))
      document.getElementById("D3").addEventListener("click", () => small_anagram.animateTo("small_state_D3"))
      document.getElementById("RC").addEventListener("click", () => small_anagram.animateTo("small_state_RC"))
      document.getElementById("FRB").addEventListener("click", () => small_anagram.animateTo("small_state_FRB"))
      document.getElementById("BASH").addEventListener("click", () => small_anagram.animateTo("small_state_BASH"))
      document.getElementById("JS").addEventListener("click", () => small_anagram.animateTo("small_state_JS"))
      document.getElementById("PRO").addEventListener("click", () => small_anagram.animateTo("small_state_PRO"))
      document.getElementById("TRI").addEventListener("click", () => small_anagram.animateTo("small_state_TRI"))

      let big_anagram = new Anagram()
      big_anagram.initialize({
       container: document.getElementById("anagram-big"),
       states: {
         "big_state_start": "abcdefghijklmnopqrstuvxyz",
         "big_state_PY": header_py,
         "big_state_MTLB": header_mtlb,
         "big_state_C": header_c,
         "big_state_D3": header_d3,
         "big_state_RC": header_rc,
         "big_state_BASH": header_bash,
         "big_state_FRB": header_frb,
         "big_state_PRO": header_pro,
         "big_state_JS": header_js,
         "big_state_TRI": header_tri
       },
       mode: "normal",
       duration: 0.5 // in seconds
      })

      document.getElementById("PY").addEventListener("click", () => big_anagram.animateTo("big_state_PY"))
      document.getElementById("MTLB").addEventListener("click", () => big_anagram.animateTo("big_state_MTLB"))
      document.getElementById("C").addEventListener("click", () => big_anagram.animateTo("big_state_C"))
      document.getElementById("D3").addEventListener("click", () => big_anagram.animateTo("big_state_D3"))
      document.getElementById("RC").addEventListener("click", () => big_anagram.animateTo("big_state_RC"))
      document.getElementById("FRB").addEventListener("click", () => big_anagram.animateTo("big_state_FRB"))
      document.getElementById("BASH").addEventListener("click", () => big_anagram.animateTo("big_state_BASH"))
      document.getElementById("JS").addEventListener("click", () => big_anagram.animateTo("big_state_JS"))
      document.getElementById("PRO").addEventListener("click", () => big_anagram.animateTo("big_state_PRO"))
      document.getElementById("TRI").addEventListener("click", () => big_anagram.animateTo("big_state_TRI"))

    </script>
  </body>
</html>
